name: Go

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - 'master'
    tags:
      - "v*.*.*"
  pull_request:

env:
  KUBECONFIG: /tmp/kubeconfig
  OPERATOR_SDK_VERSION: v0.18.2
  IMAGE_NAME: quay.io/mittwald/kubernetes-secret-generator

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v5
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Install golangci-lint
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.33.0

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run -v --timeout 5m

      - name: Create kind cluster and apply crds
        run: make crd

      - name: Hack Code Climate and Go Modules
        if: github.event_name != 'pull_request'
        run: mkdir -p github.com/mittwald && ln -sf $(pwd) github.com/mittwald/kubernetes-secret-generator

      - name: Test & publish code coverage
        if: github.event_name != 'pull_request'
        uses: paambaati/codeclimate-action@v9
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.codeClimateReporterID }}
        with:
          coverageCommand: go test -coverprofile=c.out ./...
          debug: true
          prefix: 'github.com/${{ github.repository }}/'

      - name: Go Test
        if: github.event_name == 'pull_request'
        run: go test -coverprofile=c.out -coverpkg=./pkg/...  ./...

  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v5
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Install operator-sdk
        run: sudo curl -L -o /usr/local/bin/operator-sdk "https://github.com/operator-framework/operator-sdk/releases/download/${OPERATOR_SDK_VERSION}/operator-sdk-${OPERATOR_SDK_VERSION}-x86_64-linux-gnu" && sudo chmod +x /usr/local/bin/operator-sdk

      - name: Build Image
        run: operator-sdk build "$IMAGE_NAME:latest" --go-build-args "-ldflags -X=version.Version=${GITHUB_SHA::8}"
      
  deploy:
    name: Deploy Image
    runs-on: ubuntu-latest
    needs: ['test', 'build']
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v5
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.dockerLoginUsername }}
          password: ${{ secrets.dockerLoginPassword }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.ref_name }},${{ github.ref_name == 'master' && format('{0}:latest', env.IMAGE_NAME) || '' }}

      - name: Run chart version bump
        if: startsWith(github.ref, 'refs/tags/v')
        uses: mittwald/bump-app-version-action@v1
        with:
          mode: 'publish'
          chartYaml: './deploy/helm-chart/kubernetes-secret-generator/Chart.yaml'
        env:
          GITHUB_TOKEN: "${{ secrets.RELEASE_USER_TOKEN }}"
          HELM_REPO_PASSWORD: "${{ secrets.HELM_REPO_PASSWORD }}"
